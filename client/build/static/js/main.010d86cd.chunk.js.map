{"version":3,"sources":["container/Home/index.js","components/UI/input/index.js","actions/constants.js","helpers/axios.js","urlConfig.js","container/Signin/index.js","actions/auth.actions.js","container/Signup/index.js","actions/user.actions.js","App.js","serviceWorker.js","reducers/auth.reducers.js","reducers/user.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["Home","props","Container","className","to","style","textDecoration","Input","Form","Group","Label","label","Control","type","placeholder","value","onChange","Text","errorMessage","authConstants","userConstants","token","window","localStorage","getItem","axiosInstance","axios","create","baseURL","headers","Signin","useState","email","setEmail","password","setPassword","dispatch","useSelector","state","auth","useDispatch","Row","marginTop","Col","md","span","offset","onSubmit","e","preventDefault","user","console","log","a","post","res","status","data","setItem","JSON","stringify","payload","error","login","target","Button","variant","Signup","firstName","setFirstName","lastName","setLastName","message","signup","App","exact","path","component","Boolean","location","hostname","match","initState","picture","authenticate","authenticating","loading","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.010d86cd.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <Container> \r\n            \r\n            <h1>Welcome</h1><br />\r\n        <p>You can choose to sign up or if you already have an account you can sign in.</p>\r\n        <br></br>\r\n            <div className = \"signup\" >\r\n            <Link to = \"/signup\" style={{textDecoration:\"none\"}}>Signup</Link>\r\n            </div>\r\n            <div className = \"signin\">\r\n            <Link to = \"/signin\" style={{textDecoration:\"none\"}}>Signin</Link>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label>{props.label}</Form.Label>\r\n            <Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n                {props.errorMessage}\r\n            </Form.Text>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default Input;\r\n","export const authConstants = {\r\n    LOGIN_REQUEST: \"LOGIN_REQUEST\",\r\n    LOGIN_FAILURE: \"LOGIN_FAILURE\",\r\n    LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n    LOGOUT_REQUEST: \"LOGOUT_REQUEST\",\r\n    LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\",\r\n    LOGOUT_FAILURE: \"LOGOUT_FAILURE\"\r\n}\r\n\r\nexport const userConstants = {\r\n    USER_REGISTER_REQUEST: \"USER_REGISTER_REQUEST\",\r\n    USER_REGISTER_SUCCESS: \"USER_REGISTER_SUCCESS\",\r\n    USER_REGISTER_FAILURE: \"USER_REGISTER_FAILURE\"\r\n}","import axios from \"axios\";\r\nimport { api } from \"../urlConfig\";\r\n\r\nconst token = window.localStorage.getItem(\"token\");\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: api,\r\n    headers: {\r\n        // will send token with the api\r\n        \"Authorization\": token ? `Bearer ${token}` : \"\"\r\n    }\r\n});\r\n\r\nexport default axiosInstance;","export const api = \"http://localhost:5000/api\";","import React, { useState } from 'react';\r\nimport {Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/input\";\r\nimport { login } from \"../../actions/auth.actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst Signin = (props) => {\r\n    \r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const auth = useSelector(state => state.auth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            email, password\r\n        }\r\n\r\n        dispatch(login(user));\r\n    }\r\n    // if authenticated the user is automatically directed to the homepage\r\n    // if(auth.authenticate) {\r\n    //     return <Redirect to = {`/`} />\r\n    // }\r\n\r\n    return (\r\n            <Container>\r\n            <h2>Signin</h2>\r\n        <Row style = {{ marginTop: \"50px\" }}>\r\n            <Col md = {{ span: 6, offset: 3 }}>\r\n                <Form onSubmit = {userLogin}>\r\n                    <Input\r\n                        label = \"Email\"\r\n                        placeholder = \"Email\"\r\n                        value = {email}\r\n                        type = \"Email\"\r\n                        onChange = {(e) => setEmail(e.target.value)}\r\n                    />\r\n\r\n                    <Input\r\n                        label = \"Password\"\r\n                        placeholder = \"Password\"\r\n                        value = {password}\r\n                        type = \"Password\"\r\n                        onChange = {(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Signin;\r\n","import { authConstants } from \"./constants\"\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const login = (user) => {\r\n\r\n    console.log(user);\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: authConstants.LOGIN_REQUEST });\r\n        const res = await axios.post(`/signin`, {\r\n            ...user \r\n        })\r\n\r\n        if(res.status === 200) {\r\n            const { token, user } = res.data;\r\n            localStorage.setItem(\"token\", token);\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            });\r\n        } else {\r\n            if(res.status === 400) {\r\n                dispatch({\r\n                    type: authConstants.LOGIN_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const signout = () => {\r\n    return async dispatch => {\r\n        dispatch({ type: authConstants.LOGOUT_REQUEST });\r\n        const res = await axios.post(`/signout`);\r\n\r\n        if(res.status === 200) {\r\n            localStorage.clear();\r\n            dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n        } else {\r\n            dispatch({\r\n                type: authConstants.LOGOUT_FAILURE,\r\n                payload: { error: res.data.error }\r\n            })\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport {Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/input\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signup } from \"../../actions/user.actions\";\r\n\r\nconst Signup = (props) => {\r\n\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const auth = useSelector(state => state.auth);\r\n    const user = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignup = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            firstName, lastName, email, password\r\n        }\r\n        dispatch(signup(user));\r\n    }\r\n\r\n    // if(auth.authenticate) {\r\n    //     return <Redirect to = {`/`} />\r\n    // }\r\n\r\n    // if(user.loading) {\r\n    //     return <p>Loading...</p>\r\n    // }\r\n\r\n    return (\r\n            <Container>\r\n            <h2>Signup</h2>\r\n            {/* {user.message} */}\r\n            <Row style = {{ marginTop: \"50px\" }}>\r\n                <Col md = {{ span: 6, offset: 3 }}>\r\n                    <Form onSubmit = {userSignup}>\r\n                        <Input\r\n                            label = \"First Name\"\r\n                            placeholder = \"First Name\"\r\n                            value = {firstName}\r\n                            type = \"text\"\r\n                            onChange = {(e) => setFirstName(e.target.value) }\r\n                        />\r\n                        <Input\r\n                            label = \"Last Name\"\r\n                            placeholder = \"Last Name\"\r\n                            value = {lastName}\r\n                            type = \"text\"\r\n                            onChange = {(e) => setLastName(e.target.value) }\r\n                        />\r\n                        <Input\r\n                            label = \"Email\"\r\n                            placeholder = \"Email\"\r\n                            value = {email}\r\n                            type = \"Email\"\r\n                            onChange = {(e) => setEmail(e.target.value) }\r\n                        />\r\n                        <Input\r\n                            label = \"Password\"\r\n                            placeholder = \"Password\"\r\n                            value = {password}\r\n                            type = \"Password\"\r\n                            onChange = {(e) => setPassword(e.target.value) }\r\n                        />\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                    </Col>\r\n                </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Signup;\r\n","import { userConstants } from \"./constants\"\r\nimport axios from \"../helpers/axios\";\r\n\r\n\r\nexport const signup = (user) => {\r\n\r\n    console.log(user);\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: userConstants.USER_REGISTER_REQUEST });\r\n        const res = await axios.post(`/signup`, {\r\n            ...user \r\n        })\r\n\r\n        if(res.status === 201) {\r\n            const { message } = res.data;\r\n            dispatch({\r\n                type: userConstants.USER_REGISTER_SUCCESS,\r\n                payload: { message }\r\n            });\r\n        } else {\r\n            if(res.status === 400) {\r\n                dispatch({\r\n                    type: userConstants.USER_REGISTER_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from \"./container/Home\";\nimport Signin from \"./container/Signin\";\nimport Signup from \"./container/Signup\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n\nfunction App() {\n\n  // const dispatch = useDispatch();\n  // const auth = useSelector(state => state.auth)\n\n  // useEffect(() => {\n  //   // eslint-disable-next-line\n  //   if (!auth.authenticate) {\n  //     dispatch(isUserLoggedIn());\n  //   }\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { authConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    token: null,\r\n    user: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        picture: \"\"\r\n    },\r\n    authenticate: false,\r\n    authenticating: false\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    console.log(action);\r\n\r\n    switch(action.type){\r\n        case authConstants.LOGIN_REQUEST:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case authConstants.LOGIN_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                authenticate: true,\r\n                authenticating: false\r\n            }\r\n        break;\r\n    case authConstants.LOGOUT_REQUEST:\r\n        state = {\r\n            ...state,\r\n            loading: true\r\n        }\r\n        break;\r\n    case authConstants.LOGOUT_SUCCESS:\r\n            state = {\r\n                ...initState\r\n            }\r\n        break;\r\n    case authConstants.LOGOUT_FAILURE:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading: false\r\n            }\r\n        break;\r\n\r\n    }\r\n    \r\n    return state;\r\n}","import { userConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    error: null,\r\n    message: \"\",\r\n    loading: false\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    switch(action.type) {\r\n        case userConstants.USER_REGISTER_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case userConstants.USER_REGISTER_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload.message\r\n            }\r\n            break;\r\n        case userConstants.USER_REGISTER_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}","import authReducer from \"./auth.reducers\";\r\nimport userReducer from \"./user.reducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    user: userReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}